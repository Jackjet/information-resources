#注意每个项目的名字都不一样，需要修改RESOURCESHARINGMGMT_RESOURCESHARINGMGMT为自己项目的名称,否则在一个操作系统里使用同样的名字会导致互相影响
#
server.port=${RESOURCESHARINGMGMT_RESOURCESHARINGMGMT_PORT:8100}
#
#负责webapi框架和组件配置
#
#缺省支持跨域，生产环境需要改成特定域名，多个以逗号隔开
d1.framework.webapi.cors=*
#
#负责数据相关配置
##### JDBC 配置 #######
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=${RESOURCESHARINGMGMT_RESOURCESHARINGMGMT_POSTGRE_URL:jdbc:postgresql://8.140.114.226:15432/resource_sharing_mgmt?characterEncoding=utf8&useSSL=false}
spring.datasource.username=${RESOURCESHARINGMGMT_RESOURCESHARINGMGMT_POSTGRE_USERNAME:postgres}
spring.datasource.password=${RESOURCESHARINGMGMT_RESOURCESHARINGMGMT_POSTGRE_PASSWORD:Qwer@1234}
#自动迁移数据库，注意数据库必须手动创建，其它不需要
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#指定数据库方言
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.initialization-mode=always
#设置时区，否则会少8个小时
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
##### 连接池配置 #######
# 过滤器设置（第一个stat很重要，没有的话会监控不到SQL）
spring.datasource.druid.filters=stat,log4j2
#spring.datasource.druid.filters=stat,wall,log4j2
##### WebStatFilter配置 #######
#启用StatFilter
spring.datasource.druid.web-stat-filter.enabled=true
#添加过滤规则
spring.datasource.druid.web-stat-filter.url-pattern=/*
#排除一些不必要的url
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#开启session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=true
#缺省sessionStatMaxCount是1000个
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
#spring.datasource.druid.web-stat-filter.principal-session-name=
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
#spring.datasource.druid.web-stat-filter.profile-enable=
##### StatViewServlet配置 #######
#启用内置的监控页面
spring.datasource.druid.stat-view-servlet.enabled=true
#内置监控页面的地址
spring.datasource.druid.stat-view-servlet.url-pattern=${RESOURCESHARINGMGMT_RESOURCESHARINGMGMT_DRUID_PORTAL:/druid/*}
#关闭 Reset All 功能
spring.datasource.druid.stat-view-servlet.reset-enable=false
#设置登录用户名
spring.datasource.druid.stat-view-servlet.login-username=admin
#设置登录密码
spring.datasource.druid.stat-view-servlet.login-password=Qwer@1234
#白名单（如果allow没有配置或者为空，则允许所有访问）
spring.datasource.druid.stat-view-servlet.allow=
#黑名单（deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝）
spring.datasource.druid.stat-view-servlet.deny=
#spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=3000
#spring.datasource.druid.aop-patterns=

#是否出现滑块验证码
d1.project.login.show-image-captcha=false
#登录密码错误重试的次数，超过就会锁住用户，没有这个值或值为0表示不限制
d1.project.user.lock.retry.count=5
#登录密码错误重试到一定次数后，锁住用户一段时间，单位是分钟
d1.project.user.lock.period=10

#partialUse部分使用,useAll全部使用(未实现),doNotUse不使用
sso.use=partialUse
#单点登录地址
sso.url=https://safe.duanyan.info:8443
#单点登录领域
sso.realm=SingleApplication
#单点登录客户管理员id
sso.clientAdminId=SingleApplication-admin
#单点登录客户管理员密匙
sso.clientAdminSecret=7bbaefb0-6323-4b83-834e-31c877bd7ee2
#单点登录客户id
sso.clientId=singleApplication


###管理配置   正式环境###
authentication.admin.resource=tianjin_admin
authentication.admin.credentials.secret=d9e4e40a-2e4f-4de8-af20-a4358e114693
###应用配置###
authentication.enabled=true
authentication.realm =tianjin
authentication.auth-server-url =http://8.140.114.226:9001/auth
authentication.ssl-required = none
authentication.resource =resource_sharing_mgmt
authentication.credentials.secret =353e795f-d421-4c94-997f-95f9046c1332
#true使用应用角色，false使用领域角色，默认false
authentication.use-resource-role-mappings = false
#
#领域角色 默认值default_role 和 /*
keycloak.securityConstraints[0].authRoles[0]=default_role
#keycloak.securityConstraints[0].securityCollections[0].patterns[0]=http://8.140.127.114/operation_manage/*
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/webadmin/*
keycloak.securityConstraints[0].securityCollections[1].patterns[0]=/web/login.html
########正式环境###########

##启用授权
#authentication.policy-enforcer-config.lazy-load-paths=true

###管理配置   本地测试###
#authentication.admin.resource=tianjin_admin
#authentication.admin.credentials.secret=d3030997-856b-4dc2-a507-fd4b471adf24
####应用配置###
#authentication.enabled=true
#authentication.realm =tianjin
#authentication.auth-server-url =http://localhost:9001/auth
#authentication.ssl-required = none
#authentication.resource =resource_sharing_mgmt
#authentication.credentials.secret =f8af1876-fd50-4d8b-a595-f6395ea4ec51
##true使用应用角色，false使用领域角色，默认false
#authentication.use-resource-role-mappings = false
##
##领域角色 默认值default_role 和 /*
#keycloak.securityConstraints[0].authRoles[0]=default_role
##keycloak.securityConstraints[0].securityCollections[0].patterns[0]=http://8.140.127.114/operation_manage/*
#keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/*
####################本地测试######################

#对接API系统
#api-integration
apiManage.appid=257393679b9c473d8ec26c42d6e63a9d
apiManage.appkey=U2FsdGVkX19PB8/2xqzgohkTSu749BBrrdpaIS2H7LhxUrnNIkjcZPfkFqVCMfV+
apiManage.url=http://8.140.114.226:8075

#api集成
#apiIntegrate.url=http://8.140.114.226:8072
apiIntegrate.url=http://localhost:8091
apiIntegrate.appid=257393679b9c473d8ec26c42d6e63a9d
apiIntegrate.appkey=U2FsdGVkX19PB8/2xqzgohkTSu749BBrrdpaIS2H7LhxUrnNIkjcZPfkFqVCMfV+

#对接资源目录管理系统
daas.apiKey=7be5499f37034ef5bdc387f5382cd6be
dass.url=http://8.140.114.226:8084/api
#dass.url=http://10.113.0.31:5080/api

#camel FTP
camel.springboot.main-run-controller=true
management.endpoint.camelroutes.enabled=true
management.endpoint.camelroutes.read-only=true

ftp.server.info=sftp://47.93.42.226:22/../data/ftp/ts?username=root&password=[2jks=dfs,.i3,]]&charset=GBK&delay=3600s&noop=true&recursive=true
ftp.local.dir=file:D:/temp/ftp

#前置机数据库连接
frontdatabase.url=jdbc:mysql://39.102.73.127:3306/mysql?characterEncoding=utf8&useSSL=false
frontdatabase.username=root
frontdatabase.password=Qwer@1234